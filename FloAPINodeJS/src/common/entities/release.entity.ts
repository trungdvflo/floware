import {
  Column,
  Entity,
  Index,
  PrimaryGeneratedColumn
} from "typeorm";

@Index("file_name", ["file_name"], {})
@Index("checksum", ["checksum"], {})
@Index("os_support", ["os_support"], {})
@Index("release_type", ["release_type"], {})
@Index("release_time", ["release_time"], {})
@Index("release_status", ["release_status"], {})
@Index("created_date", ["created_date"], {})
@Index("app_id", ["app_id"], {})
@Entity("release")
export class Release {
  @PrimaryGeneratedColumn({ type: "int", name: "id" })
  id: number;

  @Column("int", {
    name: "user_id",
    comment: "Just tracking who upload/create this release Flo app",
    unsigned: true,
  })
  user_id: number;

  @Column("varchar", {
    name: "version",
    comment: "Version Flo app released",
    length: 25,
  })
  version: string;

  @Column("varchar", {
    name: "checksum",
    comment: "It is string and it will be hashed by client side",
    length: 200,
  })
  checksum: string;

  @Column("text", {
    name: "release_note",
    nullable: true,
    comment: "Admin can note anything on this field",
  })
  release_note: string | null;

  @Column("text", { name: "description", nullable: true })
  description: string | null;

  @Column("varchar", {
    name: "file_name",
    comment:
      "This is real name of file which uploaded to server side (it will be shown on the UI of Admin page)",
    length: 200,
  })
  file_name: string;

  @Column("varchar", {
    name: "file_uid",
    comment:
      "It is ID of file which stored in HDD (it will be generated by server side)",
    length: 100,
  })
  file_uid: string;

  @Column("varchar", {
    name: "app_id",
    comment:
      "Flo app type, default =0 : flo mac app (refer to table app_register)",
    length: 255,
  })
  app_id: string;

  @Column("decimal", {
    name: "build_number",
    comment: "Unique number that marks the application build number.",
    precision: 16,
    scale: 0,
  })
  build_number: number;

  @Column("varchar", {
    name: "title",
    length: 128,
  })
  title: string;

  @Column("varchar", {
    name: "message",
    length: 512,
  })
  message: string;

  @Column("double", {
    name: "expire_date",
    nullable: true,
    comment: "Time expire of the build.",
    precision: 13,
    scale: 3,
  })
  expire_date: number;

  @Column("varchar", {
    name: "message_expire",
    comment: "Message show to user when expire.",
    length: 5000,
  })
  message_expire: string;

  @Column("varchar", {
    name: "os_support",
    nullable: true,
    comment: "Minimum operating system supported for installation",
    length: 45,
  })
  os_support: string | null;

  @Column("int", {
    name: "length",
    comment: "The size of the zip file is uploaded",
  })
  length: number;

  @Column("varchar", {
    name: "file_dsym",
    comment: "Key check reports application crashes",
    length: 100,
  })
  file_dsym: string;

  @Column("varchar", { name: "file_dsym_uid", nullable: true, length: 100 })
  file_dsym_uid: string | null;

  @Column("varchar", { nullable: true, length: 512 })
  url_download: string;

  @Column("enum", {
    name: "release_type",
    comment:
      "Value: \n\n  * 0: Minor: normal update\n  * 1: Major: any build that requires a removal of existing data and reinstall.",
    enum: ["0", "1"],
    default: () => "'0'",
  })
  release_type: "0" | "1";

  @Column("double", {
    name: "release_time",
    nullable: true,
    precision: 13,
    scale: 3,
  })
  release_time: number | null;

  @Column("enum", {
    name: "release_status",
    nullable: true,
    enum: ["0", "1", "2", "3"],
  })
  release_status: "0" | "1" | "2" | "3" | null;

  @Column("tinyint", {
    name: "upload_status",
    unsigned: true,
    default: 0
  })
  upload_status: number;

  @Column("double", { name: "created_date", precision: 13, scale: 3 })
  created_date: number;

  @Column("double", {
    name: "updated_date",
    nullable: true,
    precision: 13,
    scale: 3,
  })
  updated_date: number | null;

  // @OneToMany(
  //   () => PlatformReleasePushNotifications,
  //   (platformReleasePushNotifications) =>
  //     platformReleasePushNotifications.baseRelease
  // )
  // platformReleasePushNotifications: PlatformReleasePushNotifications[];

  // @OneToMany(
  //   () => PlatformReleasePushNotifications,
  //   (platformReleasePushNotifications) =>
  //     platformReleasePushNotifications.destinationRelease
  // )
  // platformReleasePushNotifications2: PlatformReleasePushNotifications[];

  // @OneToMany(() => UsersReleases, (usersReleases) => usersReleases.release)
  // usersReleases: UsersReleases[];
}
